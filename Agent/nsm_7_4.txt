goal:  [((3, 6), (3, 6), True, False, 'p'), ((3, 6), (3, 6), True, True, 'p')]
initial belief setup
variables setup
objective setup
eq1
eq2
severe:  u4 ((3, 6), (3, 6), True, False, 'p') down ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((3, 6), (3, 6), True, False, 'p') up ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((3, 6), (3, 6), True, False, 'p') right ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((3, 6), (3, 6), True, False, 'p') left ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((3, 6), (3, 6), True, True, 'p') down ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((3, 6), (3, 6), True, True, 'p') up ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((3, 6), (3, 6), True, True, 'p') right ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((3, 6), (3, 6), True, True, 'p') left ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((-1, -1), (-1, -1), False, False, 'r') down ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((-1, -1), (-1, -1), False, False, 'r') up ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((-1, -1), (-1, -1), False, False, 'r') right ((-1, -1), (-1, -1), False, False, 'r')
severe:  u4 ((-1, -1), (-1, -1), False, False, 'r') left ((-1, -1), (-1, -1), False, False, 'r')
0.4
eq3
mild:  u2 ((3, 6), (3, 6), True, False, 'p') down ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((3, 6), (3, 6), True, False, 'p') up ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((3, 6), (3, 6), True, False, 'p') right ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((3, 6), (3, 6), True, False, 'p') left ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((3, 6), (3, 6), True, True, 'p') down ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((3, 6), (3, 6), True, True, 'p') up ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((3, 6), (3, 6), True, True, 'p') right ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((3, 6), (3, 6), True, True, 'p') left ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((-1, -1), (-1, -1), False, False, 'r') down ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((-1, -1), (-1, -1), False, False, 'r') up ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((-1, -1), (-1, -1), False, False, 'r') right ((-1, -1), (-1, -1), False, False, 'r')
mild:  u2 ((-1, -1), (-1, -1), False, False, 'r') left ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((3, 6), (3, 6), True, False, 'p') down ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((3, 6), (3, 6), True, False, 'p') up ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((3, 6), (3, 6), True, False, 'p') right ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((3, 6), (3, 6), True, False, 'p') left ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((3, 6), (3, 6), True, True, 'p') down ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((3, 6), (3, 6), True, True, 'p') up ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((3, 6), (3, 6), True, True, 'p') right ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((3, 6), (3, 6), True, True, 'p') left ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((-1, -1), (-1, -1), False, False, 'r') down ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((-1, -1), (-1, -1), False, False, 'r') up ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((-1, -1), (-1, -1), False, False, 'r') right ((-1, -1), (-1, -1), False, False, 'r')
mild:  u3 ((-1, -1), (-1, -1), False, False, 'r') left ((-1, -1), (-1, -1), False, False, 'r')
0.4
eq4
problem setup
apm 14.139.82.6_gk_model0 <br><pre> ----------------------------------------------------------------
 APMonitor, Version 1.0.1
 APMonitor Optimization Suite
 ----------------------------------------------------------------
 
 
 Warning: there is insufficient data in CSV file 14.139.82.6_gk_model0.csv
 
 --------- APM Model Size ------------
 Each time step contains
   Objects      :            0
   Constants    :            0
   Variables    :         1976
   Intermediates:            0
   Connections  :            0
   Equations    :         6133
   Residuals    :         6133
 
 Number of state variables:           1976
 Number of total equations: -         1381
 Number of slack variables: -            2
 ---------------------------------------
 Degrees of freedom       :            593
 
 ----------------------------------------------
 Steady State Optimization with APOPT Solver
 ----------------------------------------------
 
 Iter    Objective  Convergence
    0  1.24840E+00  1.00000E+00
    1  2.87658E+02  1.00000E+00
    2  3.35667E+00  1.13687E-13
    3  7.38105E+02  7.98047E-01
    4  9.16115E+03  1.42749E-01
    5  4.51489E+03  6.14289E-01
    6  1.04864E+03  6.04730E-01
    7  6.44563E+02  1.94522E-01
    8  9.86517E+02  1.01661E-01
    9  4.86786E+02  1.36184E-01
 
 Iter    Objective  Convergence
   10  1.44104E+02  6.90756E-02
   11  1.13824E+02  4.72531E-02
   12  8.99250E+01  3.66877E-02
   13  5.66650E+01  1.45472E-02
   14  1.29242E+02  1.17493E-02
   15  3.09744E+01  6.64068E-02
   16  4.32573E+01  3.87887E-03
   17  5.91019E+01  1.08734E-02
   18  7.07645E+01  9.82875E-03
   19  1.36602E+01  3.87887E-03
 
 Iter    Objective  Convergence
   20  1.31633E+01  4.62816E-03
   21  1.29763E+01  3.02297E-02
   22  1.28840E+01  3.90083E-03
   23  1.28754E+01  1.15457E-03
   24  1.28501E+01  8.28078E-05
   25  1.28438E+01  8.90922E-04
   26  1.28191E+01  1.27706E-04
   27  1.27881E+01  5.88887E-03
   28  1.27199E+01  6.83900E-04
   29  1.25862E+01  5.07508E-03
 
 Iter    Objective  Convergence
   30  1.25161E+01  2.31142E-02
   31  1.24927E+01  1.11239E-02
   32  1.24969E+01  1.34240E-03
   33  1.24924E+01  4.02725E-05
   34  1.28207E+01  4.60490E-06
   35  1.25100E+01  3.08211E-03
   36  1.24640E+01  9.93183E-04
   37  1.24630E+01  1.17484E-05
   38  2.45505E+01  5.92545E-06
   39  8.10667E+02  1.74646E-03
 
 Iter    Objective  Convergence
   40  3.84049E+02  1.57153E-03
   41  1.74663E+01  5.92545E-06
   42  8.91336E+02  3.21463E-07
   43  5.78216E+06  3.20551E-07
   44  1.24610E+01  3.20551E-07
   45  1.24569E+01  1.91464E-03
   46  1.24664E+01  2.47247E-03
   47  1.24630E+01  1.84103E-04
   48  1.24628E+01  2.98987E-05
   49  1.24624E+01  1.88420E-05
 
 Iter    Objective  Convergence
   50  1.24624E+01  2.07308E-06
   51  1.24624E+01  1.38086E-06
   52  1.24623E+01  4.31333E-06
   53  1.24623E+01  1.06010E-08
   54  1.24623E+01  3.05873E-09
   55  1.24623E+01  3.05873E-09
 Successful solution
 
 ---------------------------------------------------
 Solver         :  APOPT (v1.0)
 Solution time  :    48.5345000000016      sec
 Objective      :    12.4623239110889     
 Successful solution
 ---------------------------------------------------
 
('u1', ((0, 0), (3, 3), False, False, 'p')) 1.0
{'down': 1.2143064332e-17, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((0, 1), (3, 3), False, False, 'p')) 0.8991
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u1', ((0, 2), (3, 3), False, False, 'p')) 0.08982009
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u1', ((0, 3), (3, 3), False, False, 'p')) 0.0098585201589
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u1', ((0, 4), (3, 3), False, False, 'p')) 0.00098486616388
{'down': 0.0, 'up': 0.0, 'right': 0.0, 'left': 1.0}
('u1', ((1, 0), (3, 3), False, False, 'p')) 0.0999
{'down': 5.5511151231e-17, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((1, 1), (3, 3), False, False, 'p')) 0.8982009
{'down': 8.6736173799e-18, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((1, 2), (3, 3), False, False, 'p')) 0.88832967211
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u1', ((1, 3), (3, 3), False, False, 'p')) 0.1073374499
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u1', ((1, 4), (3, 3), False, False, 'p')) 0.010821399374
{'down': 0.0, 'up': 0.0, 'right': 0.0, 'left': 1.0}
('u1', ((2, 0), (3, 3), False, False, 'p')) 0.00998001
{'down': 6.2883726004e-17, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((2, 1), (3, 3), False, False, 'p')) 0.098703296901
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((2, 2), (3, 3), False, False, 'r')) 0.88744134244
{'down': 0.17357358428, 'up': 0.0, 'right': 0.82642641572, 'left': 0.0}
('u1', ((2, 3), (3, 3), False, False, 'r')) 0.84848249467
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u1', ((2, 4), (3, 3), False, False, 'r')) 0.085844459015
{'down': 2.1643605136e-17, 'up': 0.0, 'right': 0.0, 'left': 1.0}
('u1', ((3, 0), (3, 3), False, False, 'p')) 0.0010953911288
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((3, 1), (3, 3), False, False, 'p')) 0.011926383322
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((3, 2), (3, 3), False, False, 'r')) 0.24455853969
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((3, 3), (3, 3), False, False, 'r')) 0.99376797551
{'down': 0.0, 'up': 0.0, 'right': 0.0, 'left': 0.0, 'wrap': 0.19055212325, 'pick_up': 0.80944787675}
('u1', ((3, 3), (3, 3), False, True, 'r')) 0.18917523315
{'down': 0.0, 'up': 0.0, 'right': 0.0, 'left': 0.0, 'pick_up': 1.0}
('u1', ((3, 3), (3, 3), True, False, 'r')) 0.80359897438
{'down': 0.0, 'up': 0.4640555001, 'right': 0.5359444999, 'left': 0.0, 'wrap': 0.0}
('u1', ((3, 3), (3, 3), True, True, 'r')) 0.20763593642
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((3, 4), (3, 3), False, False, 'r')) 0.0097982006093
{'down': 0.0, 'up': 2.1926748581e-22, 'right': 0.0, 'left': 1.0}
('u1', ((3, 4), (3, 4), True, True, 'r')) 0.20715530108
{'down': 4.6325320817e-17, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((3, 5), (3, 3), False, False, 'p')) 0.0001356495168
{'down': 0.0, 'up': 0.0, 'right': 0.0, 'left': 1.0}
('u1', ((3, 5), (3, 5), True, True, 'p')) 0.20710895122
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u1', ((3, 6), (3, 3), False, False, 'p')) 1.3551386728e-05
{'down': 0.0, 'up': 0.0, 'right': 0.0, 'left': 1.0}
('u1', ((3, 6), (3, 6), True, True, 'p')) 0.18829513448
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
('u1', ((4, 0), (3, 3), False, False, 'p')) 0.00010942957376
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u1', ((4, 1), (3, 3), False, False, 'p')) 0.0012023777083
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u1', ((4, 2), (3, 3), False, False, 'r')) 0.024551515648
{'down': 0.0, 'up': 1.0, 'right': 6.8010922029e-17, 'left': 0.0}
('u1', ((4, 3), (3, 3), False, False, 'r')) 0.0024526964132
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u1', ((4, 3), (4, 3), True, True, 'r')) 0.020742830048
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u1', ((4, 4), (3, 3), False, False, 'r')) 0.0012238646126
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u1', ((4, 4), (4, 4), True, True, 'r')) 0.0227670233
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u1', ((4, 5), (3, 3), False, False, 'p')) 0.00013732117116
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u1', ((4, 5), (4, 5), True, True, 'p')) 0.023196107237
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u1', ((4, 6), (3, 3), False, False, 'p')) 1.5072168533e-05
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u1', ((4, 6), (4, 6), True, True, 'p')) 0.0023172911129
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u2', ((2, 3), (2, 3), True, False, 'r')) 0.33528744847
{'down': 6.1119900789e-17, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u2', ((3, 4), (3, 4), True, False, 'r')) 0.42448255033
{'down': 4.6325320817e-17, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u2', ((3, 5), (3, 5), True, False, 'p')) 0.41976652683
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u2', ((3, 6), (3, 6), True, False, 'p')) 0.38122864325
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
('u2', ((4, 3), (4, 3), True, False, 'r')) 0.043025376599
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u2', ((4, 5), (4, 5), True, False, 'p')) 0.042391575823
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u2', ((4, 6), (4, 6), True, False, 'p')) 0.0042448659589
{'down': 0.0, 'up': 1.0, 'right': 7.4239459977e-23, 'left': 0.0}
('u2', ((5, 3), (5, 3), True, False, 'p')) 0.0042982351223
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u2', ((5, 4), (5, 4), True, False, 'p')) 0.00042939368871
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u2', ((5, 5), (5, 5), True, False, 'p')) 6.8900668501e-05
{'down': 0.44032239119, 'up': 0.53007958631, 'right': 0.0295980225, 'left': 0.0}
('u2', ((5, 6), (5, 6), True, False, 'p')) 1.1063879616e-05
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u2', ((6, 5), (6, 5), True, False, 'p')) 2.8409196215e-05
{'down': 0.025202922254, 'up': 0.97479707775, 'right': 0.0, 'left': 0.0}
('u3', ((2, 4), (2, 4), True, False, 'r')) 0.30145694492
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u3', ((2, 5), (2, 5), True, False, 'p')) 0.030432183007
{'down': 0.19595085429, 'up': 0.0, 'right': 0.094065733804, 'left': 0.70998341191}
('u3', ((2, 6), (2, 6), True, False, 'p')) 0.0031695116045
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u3', ((3, 3), (3, 3), True, False, 'r')) 0.033495216102
{'down': 0.0, 'up': 0.4640555001, 'right': 0.5359444999, 'left': 0.0, 'wrap': 0.0}
('u3', ((3, 5), (3, 5), True, False, 'p')) 0.016717379741
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u3', ((3, 6), (3, 6), True, False, 'p')) 0.018771356746
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
('u3', ((4, 3), (4, 3), True, False, 'r')) 0.0038645431984
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u3', ((4, 4), (4, 4), True, False, 'r')) 0.081475990744
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u3', ((4, 5), (4, 5), True, False, 'p')) 0.0099114730549
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u3', ((4, 6), (4, 6), True, False, 'p')) 0.00099104964659
{'down': 0.0, 'up': 1.0, 'right': 7.4239459977e-23, 'left': 0.0}
('u3', ((5, 3), (5, 3), True, False, 'p')) 0.00038606786552
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u3', ((5, 4), (5, 4), True, False, 'p')) 3.8568179766e-05
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u4', ((2, 3), (2, 3), True, False, 'r')) 0.014583133016
{'down': 6.1119900789e-17, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u4', ((2, 4), (2, 4), True, False, 'r')) 0.034779173503
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u4', ((2, 5), (2, 5), True, False, 'p')) 0.0035109696118
{'down': 0.19595085429, 'up': 0.0, 'right': 0.094065733804, 'left': 0.70998341191}
('u4', ((2, 6), (2, 6), True, False, 'p')) 0.00036566745575
{'down': 1.0, 'up': 0.0, 'right': 0.0, 'left': 0.0}
('u4', ((3, 3), (3, 3), True, False, 'r')) 0.0014568549883
{'down': 0.0, 'up': 0.4640555001, 'right': 0.5359444999, 'left': 0.0, 'wrap': 0.0}
('u4', ((3, 4), (3, 4), True, False, 'r')) 0.43856471823
{'down': 4.6325320817e-17, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u4', ((3, 5), (3, 5), True, False, 'p')) 0.43959220408
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u4', ((3, 6), (3, 6), True, False, 'p')) 0.4
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
('u4', ((4, 3), (4, 3), True, False, 'r')) 0.0024374053773
{'down': 0.0, 'up': 0.0, 'right': 1.0, 'left': 0.0}
('u4', ((4, 4), (4, 4), True, False, 'r')) 0.04953524487
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u4', ((4, 5), (4, 5), True, False, 'p')) 0.049358345497
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u4', ((4, 6), (4, 6), True, False, 'p')) 0.004931462247
{'down': 0.0, 'up': 1.0, 'right': 7.4239459977e-23, 'left': 0.0}
('u4', ((5, 3), (5, 3), True, False, 'p')) 0.0002434967972
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u4', ((5, 4), (5, 4), True, False, 'p')) 2.432533004e-05
{'down': 0.0, 'up': 1.0, 'right': 0.0, 'left': 0.0}
('u5', ((-1, -1), (-1, -1), False, False, 'r')) 987.30683935
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
----------------------------------------
Objective Value:  12.462323911108866
Severe Value:  0.4
Mild Value:  0.39999999999599994
----------------------------------------

==========================================
SLURM_JOB_ID = 600698
SLURM_NODELIST = gnode28
SLURM_JOB_GPUS = 0
==========================================
/var/spool/slurmd/job600698/slurm_script: line 10: /home/sriaish/keras/bin/activate: No such file or directory
((2, 2), (2, 2), True, 'p')
((2, 2), (2, 2), True, 'p')
initial belief setup
variables setup
objective setup
eq1
eq2
problem setup
apm 14.139.82.6_gk_model0 <br><pre> ----------------------------------------------------------------
 APMonitor, Version 1.0.1
 APMonitor Optimization Suite
 ----------------------------------------------------------------
 
 
 Warning: there is insufficient data in CSV file 14.139.82.6_gk_model0.csv
 
 --------- APM Model Size ------------
 Each time step contains
   Objects      :            0
   Constants    :            0
   Variables    :          467
   Intermediates:            0
   Connections  :            0
   Equations    :          557
   Residuals    :          557
 
 Number of state variables:            467
 Number of total equations: -          180
 Number of slack variables: -            0
 ---------------------------------------
 Degrees of freedom       :            287
 
 **********************************************
 Steady State Optimization with Interior Point Solver
 **********************************************
  
  
 Info: Exact Hessian

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

This is Ipopt version 3.12.10, running with linear solver ma57.

Number of nonzeros in equality constraint Jacobian...:     1710
Number of nonzeros in inequality constraint Jacobian.:        0
Number of nonzeros in Lagrangian Hessian.............:      377

Total number of variables............................:      467
                     variables with only lower bounds:        0
                variables with lower and upper bounds:      467
                     variables with only upper bounds:        0
Total number of equality constraints.................:      180
Total number of inequality constraints...............:        0
        inequality constraints with only lower bounds:        0
   inequality constraints with lower and upper bounds:        0
        inequality constraints with only upper bounds:        0

iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
   0  3.8999922e-02 9.60e-01 3.56e-02   0.0 0.00e+00    -  0.00e+00 0.00e+00   0
   1  6.7819845e-03 9.24e-01 4.84e+01  -0.6 2.61e-01    -  9.90e-01 3.79e-02f  1
   2  5.5395228e-03 8.95e-01 1.69e+02  -0.7 5.33e-01    -  7.51e-02 3.11e-02f  1
   3  3.8298068e-03 8.42e-01 8.47e+03  -0.0 4.69e-01    -  1.00e+00 5.90e-02f  1
   4  1.7530841e-03 7.48e-01 7.85e+04   1.1 3.29e-01    -  1.00e+00 1.11e-01f  1
   5  2.2348458e-04 5.73e-01 6.91e+04   0.3 2.27e-01    -  2.31e-01 2.34e-01h  1
   6  1.2465870e-04 4.32e-01 1.69e+05  -0.0 4.00e-01    -  3.92e-01 2.47e-01h  1
   7  6.8502814e-05 2.95e-01 2.54e+05  -0.8 3.15e-01    -  4.58e-01 3.17e-01h  1
   8  3.0574913e-05 1.65e-01 3.42e+05  -1.8 2.10e-01    -  6.51e-01 4.40e-01h  1
   9  7.7609748e-06 5.88e-02 6.20e+05  -0.7 2.65e-01    -  9.65e-01 6.44e-01h  1
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  10  2.3516463e-07 4.86e-03 4.12e+04  -1.9 3.47e-02    -  9.66e-01 9.17e-01h  1
  11 -1.4570553e-09 1.14e-09 6.60e+05  -2.1 1.66e-01    -  1.00e+00 1.00e+00h  1
  12 -1.3676232e-10 4.95e-11 5.59e+04  -2.5 3.06e-02    -  1.00e+00 1.00e+00f  1
  13  2.5580676e-12 1.44e-12 2.02e+04  -2.6 3.23e-02    -  1.00e+00 1.00e+00f  1
  14  1.2236781e-14 1.72e-14 1.20e+02  -2.6 7.52e-03    -  1.00e+00 1.00e+00f  1
  15  1.8151065e-19 2.22e-16 1.83e-03  -2.6 1.91e-05    -  1.00e+00 1.00e+00h  1
  16  1.7423836e-33 2.22e-16 2.37e+00  -8.6 1.46e-16    -  1.00e+00 1.00e+00   0
  17  7.7249723e-36 2.22e-16 5.99e-15  -7.7 1.34e-10    -  1.00e+00 1.00e+00h  1

Number of Iterations....: 17

                                   (scaled)                 (unscaled)
Objective...............:   7.7249723480729903e-36    7.7249723480729903e-36
Dual infeasibility......:   5.9936537010267340e-15    5.9936537010267340e-15
Constraint violation....:   2.2204460492503131e-16    2.2204460492503131e-16
Complementarity.........:   2.1025592607560988e-08    2.1025592607560988e-08
Overall NLP error.......:   2.1025592607560988e-08    2.1025592607560988e-08


Number of objective function evaluations             = 18
Number of objective gradient evaluations             = 18
Number of equality constraint evaluations            = 18
Number of inequality constraint evaluations          = 0
Number of equality constraint Jacobian evaluations   = 18
Number of inequality constraint Jacobian evaluations = 0
Number of Lagrangian Hessian evaluations             = 17
Total CPU secs in IPOPT (w/o function evaluations)   =      0.033
Total CPU secs in NLP function evaluations           =      0.123

EXIT: Optimal Solution Found.
 
 The solution was found.
 
 The final value of the objective function is   7.724972348072990E-036
 
 ---------------------------------------------------
 Solver         :  IPOPT (v3.12)
 Solution time  :   0.166700000001583      sec
 Objective      :   7.724972348072990E-036
 Successful solution
 ---------------------------------------------------
 
----------------------------------------
Objective Value:  7.724972348050551e-36
----------------------------------------
((0, 0), (0, 0), False, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'pick_up': 0.2}
((0, 0), (0, 0), True, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'drop': 0.2}
((0, 0), (0, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 0), (0, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 0), (1, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 0), (1, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 0), (1, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 0), (2, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 0), (2, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 0), (2, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 1), (0, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 1), (0, 1), False, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.20000000002, 'pick_up': 0.19999999999}
((0, 1), (0, 1), True, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'drop': 0.2}
((0, 1), (0, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 1), (1, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 1), (1, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 1), (1, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 1), (2, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 1), (2, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 1), (2, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 2), (0, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 2), (0, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 2), (0, 2), False, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'pick_up': 0.2}
((0, 2), (0, 2), True, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'drop': 0.2}
((0, 2), (1, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 2), (1, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 2), (1, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 2), (2, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 2), (2, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((0, 2), (2, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 0), (0, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 0), (0, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 0), (0, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 0), (1, 0), False, 'p')
{'down': 0.2, 'up': 0.20000000002, 'right': 0.2, 'left': 0.2, 'pick_up': 0.19999999999}
((1, 0), (1, 0), True, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'drop': 0.2}
((1, 0), (1, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 0), (1, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 0), (2, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 0), (2, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 0), (2, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 1), (0, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 1), (0, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 1), (0, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 1), (1, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 1), (1, 1), False, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'pick_up': 0.2}
((1, 1), (1, 1), True, 'p')
{'down': 0.2, 'up': 0.19999999999, 'right': 0.2, 'left': 0.19999999999, 'drop': 0.20000000003}
((1, 1), (1, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 1), (2, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 1), (2, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 1), (2, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 2), (0, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 2), (0, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 2), (0, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 2), (1, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 2), (1, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 2), (1, 2), False, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'pick_up': 0.2}
((1, 2), (1, 2), True, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'drop': 0.2}
((1, 2), (2, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 2), (2, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((1, 2), (2, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 0), (0, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 0), (0, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 0), (0, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 0), (1, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 0), (1, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 0), (1, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 0), (2, 0), False, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'pick_up': 0.2}
((2, 0), (2, 0), True, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'drop': 0.2}
((2, 0), (2, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 0), (2, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 1), (0, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 1), (0, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 1), (0, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 1), (1, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 1), (1, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 1), (1, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 1), (2, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 1), (2, 1), False, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'pick_up': 0.2}
((2, 1), (2, 1), True, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'drop': 0.2}
((2, 1), (2, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 2), (0, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 2), (0, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 2), (0, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 2), (1, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 2), (1, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 2), (1, 2), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 2), (2, 0), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 2), (2, 1), False, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
((2, 2), (2, 2), False, 'p')
{'down': 0.2, 'up': 0.2, 'right': 0.2, 'left': 0.2, 'pick_up': 0.2}
((2, 2), (2, 2), True, 'p')
{'down': 0.25, 'up': 0.25, 'right': 0.25, 'left': 0.25}
Saving policies
10
--------------------
